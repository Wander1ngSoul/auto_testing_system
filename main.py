import sys
import time
import logging

from config import *
from utils.file_utils import validate_environment, get_image_files
from process.image_processor import process_images_folder
from generators.report_generator import generate_summary_report

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
)
logger = logging.getLogger(__name__)


def main():
    logger.info("=" * 60)
    logger.info("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–Ø")
    logger.info("=" * 60)

    if SELECTED_SERVER == 'default':
        logger.info("‚öôÔ∏è  –†–ï–ñ–ò–ú: –õ–æ–∫–∞–ª—å–Ω—ã–π (default)")
        processing_mode = "–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"
    else:
        server_url = SERVERS.get(SELECTED_SERVER)
        logger.info(f"üåê –†–ï–ñ–ò–ú: –°–µ—Ä–≤–µ—Ä–Ω—ã–π - {SELECTED_SERVER}")
        logger.info(f"üîó URL: {server_url}")
        logger.info(f"üîë –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {AUTHORIZED_TOKEN[:8]}...")
        logger.info("üìã API: –ú–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω—ã–π (tasks ‚Üí status ‚Üí result)")
        processing_mode = "–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (—Å–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—á–µ—Ä–µ–¥—å)"

    if not validate_environment():
        logger.error("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        sys.exit(1)

    logger.info(f"üìÅ –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {FOLDER_TEST}")
    logger.info(f"üìä Excel —Ñ–∞–π–ª: {EXCEL_DATA}")
    logger.info(f"üîÑ –†–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏: {processing_mode}")

    if SELECTED_SERVER == 'default':
        logger.info(f"üêç –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {PROGRAM_SCRIPT}")

    start_time = time.time()

    success, processed_count, errors_count, skipped_count = process_images_folder(
        FOLDER_TEST, EXCEL_DATA, PROGRAM_SCRIPT, max_workers=1
    )

    total_time = time.time() - start_time

    report = generate_summary_report(processed_count, errors_count, skipped_count, total_time, EXCEL_DATA)

    if success:
        try:
            new_excel_path = rename_file_with_version_and_time(EXCEL_DATA)
            logger.info(f"üíæ –§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: {new_excel_path}")

            if SELECTED_SERVER != 'default':
                logger.info(f"üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {SELECTED_SERVER} –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            else:
                logger.info(f"üèÅ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

            logger.info(f"‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time:.2f} —Å–µ–∫—É–Ω–¥")
            logger.info(f"üìà –°–∫–æ—Ä–æ—Å—Ç—å: {report['images_per_minute']:.2f} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π/–º–∏–Ω")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    else:
        logger.error("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)


if __name__ == "__main__":
    main()